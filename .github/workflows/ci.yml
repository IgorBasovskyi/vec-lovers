name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and upload Next.js app
        run: |
          echo "Building Next.js app..."
          npm run ci:build

          echo "Current directory: $(pwd)"
          echo "Checking for .next directory..."
          if [ -d ".next" ]; then
            echo "✅ Build successful: .next directory exists"
            echo "Build files:"
            ls -la .next
            echo "File count: $(find .next -type f | wc -l)"
            echo "Directory size: $(du -sh .next)"
            
            # Create a tarball to ensure we capture everything
            echo "Creating build archive..."
            tar -czf build-files.tar.gz .next
            echo "Archive created: $(ls -la build-files.tar.gz)"
          else
            echo "❌ Build failed: .next directory not found"
            echo "Available files:"
            ls -la
            exit 1
          fi

      - name: Pre-upload verification
        run: |
          echo "Pre-upload verification..."
          echo "Current directory: $(pwd)"
          echo "Checking .next directory exists:"
          if [ -d ".next" ]; then
            echo "✅ .next directory exists"
            echo "Contents:"
            ls -la .next
            echo "File count: $(find .next -type f | wc -l)"
          else
            echo "❌ .next directory missing before upload"
            echo "Available files:"
            ls -la
            exit 1
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next
          retention-days: 7
          if-no-files-found: error

      - name: Upload build archive
        uses: actions/upload-artifact@v4
        with:
          name: build-archive
          path: build-files.tar.gz
          retention-days: 7
          if-no-files-found: warn
